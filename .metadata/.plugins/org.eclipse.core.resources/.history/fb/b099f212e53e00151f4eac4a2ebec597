package problemset;

import common.TreeNode;

public class IsSymmetric {
	public boolean solution(TreeNode root)
	{
		if (root == null) return true;
		
		return isSymm(root.left, root.right);
	}
	
	public boolean isSymmetric(TreeNode l, TreeNode r) {
		if (l == null && r == null) {
			return true;
		} else if (r == null || l == null) {
			return false;
		}
		System.out.println("l val = " + l.val + " r val = " + r.val);
	 
		if (l.val != r.val)
			return false;
	 
		if (!isSymmetric(l.left, r.right))
			return false;
		if (!isSymmetric(l.right, r.left))
			return false;
	 
		return true;
    }
	
	public void test()
	{
		int[] nodeList = {1, 2, 3, 4, 5, 6, 7, 8, 9};
		int[] valueList = {1, 2, 2, 3, 4, 4, 3, 5, 5};

		TreeNode root = TreeNode.genTree(nodeList, valueList);
		root.printTreeNodeVal();
		
		System.out.println(solution(root));
	}
}
