package problemset;

import common.TreeNode;

public class IsSymmetric {
	public boolean solution(TreeNode root)
	{
//		if (root == null) return true;
//		if ((root.left == null) && (root.right == null)) return true;
//		if ((root.left != null) && (root.right != null)) {
//			if ()
//		}
		if (root == null)
			return true;
		return isSymmetric(root.left, root.right);
	}
	public boolean isSymmetric(TreeNode l, TreeNode r) {
		if (l == null && r == null) {
			return true;
		} else if (r == null || l == null) {
			return false;
		}
	 
		if (l.val != r.val)
			return false;
	 
		if (!isSymmetric(l.left, r.right))
			return false;
		if (!isSymmetric(l.right, r.left))
			return false;
	 
		return true;
    }
	
	public void test()
	{
		int[] nodeList = {1, 2, 3, 4, 5, 6, 7};
		int[] valueList = {1, 2, 2, 3, 4, 4, 3};
	}
}
