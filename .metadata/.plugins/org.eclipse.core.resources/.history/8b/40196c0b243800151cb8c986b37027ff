package problemset;

import common.ListNode;

public class MergeTwoLists {
	public ListNode solution(ListNode l1, ListNode l2)
	{
		if ((l1 == null) && (l2 == null)) return null;
		if ((l1 != null) && (l2 == null)) return l1;
		if ((l1 == null) && (l2 != null)) return l2;
		
		int t1, t2;
		ListNode l1cur = l1;
		ListNode l2cur = l2;
		ListNode head = new ListNode(0);
		ListNode curNode = head;
		while ((l1cur != null) && (l2cur != null)) {
			t1 = l1cur.val;
			t2 = l2cur.val;
			if (t1 < t2) {
				curNode.next = new ListNode(t1);
				l1cur = l1cur.next;
			} else {
				curNode.next = new ListNode(t2);
				l2cur = l2cur.next;
			}
			curNode = curNode.next;
		}
		if (l1cur != null) {
			curNode.next = l1cur;
		}
		if (l2cur != null) {
			curNode.next = l2cur;
		}
	}
}
