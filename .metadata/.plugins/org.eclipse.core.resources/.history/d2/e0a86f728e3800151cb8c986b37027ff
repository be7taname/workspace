package problemset;

import java.util.*;

import common.TreeNode;

public class LevelOrder {
	public List<List<Integer>>solution(TreeNode root) {
		List<List<Integer>> LevelOrderVal = new ArrayList<>();
		Queue<TreeNode> treeQ = new LinkedList<TreeNode>();
		
		treeQ.add(root);
		TreeNode lastNodeInLevel = root, lastNodeNxtLevel = null;
		List<Integer> valInLevel = new ArrayList<Integer>();
		while (!treeQ.isEmpty()) {
			TreeNode curNode = treeQ.remove();
			valInLevel.add(curNode.val);
			if (curNode.left != null) {
				treeQ.add(curNode.left);
				lastNodeNxtLevel = curNode.left;
			}
			if (curNode.right != null) {
				treeQ.add(curNode.right);
				lastNodeNxtLevel = curNode.right;
			}
			if (curNode == lastNodeInLevel) {
				lastNodeInLevel = lastNodeNxtLevel;
				LevelOrderVal.add(valInLevel);
			}
		}
		
		return LevelOrderVal;
	}
}
